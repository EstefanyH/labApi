name: CI Pipeline

on:
  push:
    branches:
      - develop
  workflow_dispatch: # Para ejecutarlo manualmente

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Equivalente a GIT_DEPTH=0

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: |
          echo "Building..."
          mkdir build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/
            Dockerfile

  tester:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Run tests
        run: echo "Tester..."

  obfuscate:
    runs-on: ubuntu-latest
    needs: tester
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Compile TypeScript
        run: npx tsc

      - name: Install obfuscator
        run: npm install -g javascript-obfuscator

      - name: Obfuscate source code
        run: |
          mkdir -p dist-obf
          javascript-obfuscator dist --output dist-obf --compact true --control-flow-flattening true

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/

  dockerize:
    runs-on: ubuntu-latest
    needs: obfuscate
    steps:
      - uses: actions/checkout@v4

      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: ./dist

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ format('{0}', github.repository) }}:latest
          IMAGE_NAME=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          echo "Using image: $IMAGE_NAME"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  deploy:
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y curl tar

      - name: Download Koyeb CLI
        run: |
          curl -L -o koyeb-cli.tar.gz "https://github.com/koyeb/koyeb-cli/releases/download/v5.4.1/koyeb-cli_5.4.1_linux_amd64.tar.gz"
          tar -xzf koyeb-cli.tar.gz
          sudo mv koyeb /usr/local/bin/koyeb
          chmod +x /usr/local/bin/koyeb

      - name: Configure Koyeb
        run: |
          mkdir -p ~/.koyeb
          echo "access_token: ${{ secrets.KOYEB_API_TOKEN }}" > ~/.koyeb.yaml
          koyeb version

      - name: Deploy to Koyeb
        run: |
          echo "ðŸ“¢ Iniciando despliegue en Koyeb..."
          koyeb service redeploy "vivid-carrie/apisinau-nodejs" --token "${{ secrets.KOYEB_API_TOKEN }}"
          echo "âœ… Despliegue exitoso en Koyeb ðŸš€"
